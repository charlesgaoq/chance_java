server.port=9099

idc.ismulti.enable=false
#业务配置区域
#databaseconfig
idbc.driverClassName=org.apache.hive.jdbc.HiveDriver
idbc.url=jdbc:hive2://10.0.9.14:21050/;auth=noSasl
idbc.connect.count=10
#初始化连接数
idbc.initialSize=5
#最大连接数
idbc.maxActive=150
#最大空闲连接数
idbc.maxIdle=10
#最小空闲连接数
idbc.minIdle=3
#简单的验证语句 select 1 from dual 
idbc.validationQuery=SELECT 1
#连接是否被空闲连接回收器(如果有)进行检验
idbc.testWhileIdle=true
#在空闲连接回收器线程运行期间休眠的时间值
idbc.timeBetweenEvictionRunsMillis=3600000
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值
idbc.minEvictableIdleTimeMillis=18000000
#在取出连接时进行有效验证 
idbc.testOnBorrow=true
#是否开启Kerberos认证
idbc.Kerberos=false
idbc.Kerberos.conf=d:/krb5-77.conf
idbc.Kerberos.debug=ture
idbc.Kerberos.user=impala/everdc77@TEST.COM
idbc.Kerberos.secrtKey=d:/impala.keytab

spring.mvc.dispatch-options-request=true
spring.aop.proxy-target-class=true
management.security.enabled=false
security.ignored=/**
security.basic.enabled=false
security.sessions=NEVER
#swagger扫描
spring.swagger.package=com.eversec


#####config.properties
#批量上传文件路径
imprtPath=/sdbimprt/
#批量导入一次提交数量
maxImprtOnce=10000
#任务集合空间
taskCs=evertask
#批量导入任务集合
taskImprtCl=imprttask
#巨衫任务查询结果集合空间
taskCS=evertask
#巨衫任务信息集合
#sdbTaskInfoCL=sdbtaskinfo
#巨衫任务查询结果集合
#sdbTaskResultCL=sdbtaskresult
#impala任务信息集合
idbTaskInfoCS=idbtaskinfo_all
idbTaskInfoCL=idbtaskinfo
#impala任务查询结果集合
idbTaskResultCS=idbtaskresult_all
idbTaskResultCL=idbtaskresult
#impala任务执行每批次数量
idbTaskCycleNum=5
#es服务器地址
#测试
esip=10.0.10.116
#es端口
esport=9200
#es集群名称
clustername=
#es.userpasswd=elastic:eversec123098
esAuth=true
esUser=elastic
esPwd=eversec123098
#测试
#clustername=wxqb
#es任务数据文件目录
#esTaskFile=/home/taskfile/
#esTaskFile=d://taskfile//
#ftp服务
#ftp_url=192.168.40.225
#ftp_port=21
#ftp_user=ftpfile
#ftp_password=123456
#服务开启
mongodb=false
#自动初始化mongodb连接池
automongodb=false
impala=true
#自动初始化impala连接池
autoimpala=true
elsearch=true
#es任务
es_timetask=false
#mongodb任务
md_timetask=false
#ftp任务
#ftp_timetask=false

#集群名。(默认值: elasticsearch)
#spring.data.elasticsearch.cluster-name=everdata
#默认 9300 是 Java 客户端的端口。9200 是支持 Restful HTTP 的接口。
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
#spring.data.elasticsearch.cluster-nodes=192.168.17.21:9300,192.168.17.22:9300,192.168.17.23:9300
#spring.data.elasticsearch.propertie     用来配置客户端的额外属性。
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=30s
#spring.data.elasticsearch.local=false
#开启 Elasticsearch 仓库
#spring.data.elasticsearch.repositories.enable=false
#spring.data.elasticsearch.repositories.enabled = true

###sdb.properties
sdb.server1=192.168.228.14
sdb.server2=192.168.228.15
sdb.server3=192.168.228.16
sdb.fserver1=192.168.228.33
#sdb.server1=192.168.200.149
#sdb.server2=192.168.200.155
#sdb.server3=192.168.200.158
sdb.port=11810
sdb.fport=11820
#sdb.username=
#sdb.password=
#sdb.timeout=500
#设置若连接失败，超时时间（ms）
#sdb.retrytime=0
#设置若连接失败，重试次数
#sdb.maxActive=200
#设置连接池最大连接数
#sdb.initActive=10
#初始化连接池时，创建连接的数量
#sdb.increase=10
#当池中没有可用连接时，增加连接的数量
#sdb.maxide=10
#周期清理多余的空闲连接时，应保留连接的数量
#sdb.fulltime=5000
#当已使用的连接数到达设置的最大连接数时（500），请求连接的等待时间。
#sdb.autofreetime=600000
#连接存活时间，当连接空闲时间超过连接存活时间，将被连接池丢弃
#sdb.autofreecycletime=60000
#清除多余空闲连接的周期
#sdb.exceptioncycletime=600000
#检测并取回异常地址的周期

##springcloud
#设定dispatcher servlet的监听路径，默认为: /
server.servlet-path=/
#如下是配置服务化开关------------------------------------------------------------------------------
#是否开启Spring Cloud 服务注册支持，此为层次开关，如果未开启cloud，则下面session与dataauth均无效
spring.cloud.flag=false
#是否开启Spring Cloud session获取
spring.cloud.session=true
#是否开启Spring Cloud 下的分权分域，用于山东伪基站分权分域
spring.cloud.dataauth=false
#cloudConfig  === begin 默认name请直接使用everobp
server.address=0.0.0.0
#如果本机开发时，则注释上一行，打开本行。
#server.address=192.168.17.112
#本地开发使用
spring.application.name=database-web
#eurekaConfig
eureka.instance.prefer-ip-address=true
eureka.client.serviceUrl.defaultZone=http://localhost:21000/eureka/
#eureka.client.serviceUrl.defaultZone=http://192.168.17.24:22000/eureka/
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=15
eureka.client.healthcheck.enabled=true
#是否启动注册eureka
eureka.client.enabled=false
#cloudConfigRedis
spring.session.store-type=redis
spring.session.jdbc.initializer.enabled=false
spring.redis.database=0
spring.redis.host=10.0.10.25
spring.redis.port=6379
spring.redis.password=Eversec@123)(*
#spring.redis.host=192.168.17.24
#spring.redis.port=9990
#spring.redis.password=Redis!QAZ2wsx
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=0
#cloudConfig  === End
spring.thymeleaf.prefix=classpath:/templates/page
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
#业务配置区域
#oauthfilter不过滤的列表
bussiness.oauthnoFilters=export,iplist,swagger,configuration/ui,api/v2,images,reportOnDevice,device,createCmVndbFile,whois,systemtools,bsEventDailyCheck,obpEventChart,bsEventCount,obpEventStatistics,smsEvent,smsCount,server-api,api-docs,favicon.ico,requser,uploads,intelligence,sampleses,engineConfigs,victimPhone,virus,firstPages,whoisTask,evercm,pbs,sms,web,desevent,menu,role,sysconf,OBP,uploads,vpdb,dict,pluggingevent,CMPreStatistic,injury,statisticInjury,statisticPsudBsStasn,queryPsudBsStasn,statsInjuryScore,statsPbsLoc,statsBsPbsLocBase,queryPbsLoc,whoisResultTask,smsEventStatistics,engineResultTask,whiteList,roam,judge,openapi,sysBankCardBin,sysConfSwitch,bsAuthSyncBean,downTemplate,obtainEvidence,bsAuthSyncBean,dataPretreatReload,openapiEvent,userAccountInfo,bsRiskUser,bsDomainDns,health,sysftp

# 静态文件请求匹配方式
spring.mvc.static-path-pattern=/static/** 
spring.resources.static-locations=classpath:/static/
server.tomcat.uri-encoding=UTF-8
server.undertow.accesslog.dir=logs
server.undertow.accesslog.enabled=true 
server.undertow.accesslog.prefix=access.
server.undertow.accesslog.rotate=true 
server.undertow.accesslog.suffix=log
server.undertow.buffer-size=1024
server.undertow.direct-buffers=true
server.undertow.io-threads=8 
server.undertow.worker-threads=30
server.undertow.buffers-per-region=1024 
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB